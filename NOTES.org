* Things to do
- cleanup FieldSel
- scattergl wtf
- restrict to Physics files

* Deployment checklist [9/9]
- [X] Build/upload frontend
- [X] Update Pipfile.lock
- [X] Dump dq_db
- [X] Delete/restart dybvdq-mysql
- [X] Load dq_db (convert to InnoDB?)
- [X] Build indexes/derived tables
- [X] Clean up app_db if necessary
- [X] Set env vars
- [X] docker-compose rm; docker-compose up --build

* Frontend update
ssh root@dybdq.work "rm -rf visual_dq/dybvdq/front/build" && scp -r build root@dybdq.work:visual_dq/dybvdq/front && ssh root@dybdq.work "docker restart dybvdq-nginx"
* Collaborative debugging
upnpc -a 192.168.1.2 3000 3000 TCP
Add "0.0.0.0 lunix.mooo.com" to /etc/hosts
HOST=lunix.mooo.com npm start
Invite assistant to lunix.mooo.com:3000
Also look into disableHostCheck option to avoid using $HOST?
* Docker workflow
** On aftershock
git pull
# copy build directory (with JS bundle etc.) from local build
docker build -t dayabay/dybvdq .
docker run -d --net=host -v .:/app dayabay/dybvdq
iptables -A IN_public_allow -p tcp -m tcp --dport 5000 -m conntrack --ctstate NEW -j ACCEPT

** On DigitalOcean (old)
cd visual_dq
git clone mkramer@edison.nersc.gov:bak/dybvdq.git

# Locally:
scp -r physics/dqwg/new_website/dybvdq/dybvdq-front/build root@142.93.95.86:visual_dq/dybvdq/dybvdq-front

# Back on DO:
cd visual_dq/dybvdq
git pull
docker container rm dybvdq-app
docker image rm dayabay/dybvdq-app
docker build -t dayabay/dybvdq-app .
docker run --name=dybvdq-app -d --net=host -v $PWD:/app dayabay/dybvdq-app

** On DigitalOcean (new)
# Locally:
cd ~/physics/dqwg/new_website/front
npm run build
# rm???
scp -r build root@dybdq.work:visual_dq/dybvdq/front

# On dybdq.work
cd visual_dq/dybvdq
git pull
docker-compose stop
docker-compose up --build

** Inspecting a crashed container
(doesn't seem to work)
docker commit containername newimagename
docker run -it --entrypoint /bin/bash newimagename
* Database stuff
** Making a snapshot
#+BEGIN_SRC bash
mysqldump -h dybdq.ihep.ac.cn -u dybrw -p --opt dq_db DqDetectorNew DqDetectorNewVld DqLiveTime DqLiveTimeVld most_recent_file_tag > dq_db.20180913.sql
#+END_SRC
-- takes < 1 minute on a good day
Recommend using guwq@dybdq.ihep.ac.cn

** Running on aftershock
Then scp the .sql to dayabay@aftershock.lbl.gov:visual_dq/mysql/dumps.
It seems faster to transfer from dybdq than from lxslc6.
What about mysqldump'ing directly onto aftershock? Bad idea; locks tables for too long.

docker run -d --name=vdq-mysql --user=1000:1000 --env="MYSQL_ROOT_PASSWORD=***REMOVED***" -p 6603:3306 -v ~dayabay/visual_dq/mysql/conf.d:/etc/mysql/conf.d -v ~dayabay/visual_dq/mysql/data:/var/lib/mysql mysql:5.7

** Running on DigitalOcean
# docker container rm -f dybvdq-mysql
docker stop dybvdq-mysql
docker rm dybvdq-mysql
rm -rf ~/visual_dq/mysql/data && mkdir -p ~/visual_dq/mysql/data
# docker run -d --name=dybvdq-mysql -e MYSQL_ROOT_PASSWORD=***REMOVED*** -p 3306:3306 -v ~/visual_dq/mysql/data:/var/lib/mysql mysql:5.7
cd ~/visual_dq/mysql
docker-compose up -d
docker cp dumps/dq_db.20180904.sql dybvdq-mysql:/
docker exec -it dybvdq-mysql /bin/bash
  # mysql -p -e "create database dq_db"
  mysql -p dq_db < dq_db.20180904.sql
  rm /dq_db.20180904.sql

The load took around 8 minutes on DigitalOcean, 3 minutes on dellite!
Remember to recreate the indexes!

** Indexes and derived tables
create index idx_runfile on DqDetectorNew(runno, fileno);
select distinct runno, fileno from DqDetectorNew where runno >= 21232 and fileno >= 75 order by runno, fileno limit 1 offset 1000;

# drop table runno_fileno_sitemask;
create table runno_fileno_sitemask (runno integer, fileno integer, sitemask integer, primary key (runno, fileno, sitemask));

create table runno_fileno_sitemask (runno integer, fileno integer, sitemask integer, primary key (sitemask, runno, fileno));

insert into runno_fileno_sitemask select distinct runno, fileno, sitemask from DqDetectorNew natural join DqDetectorNewVld where sitemask=1 and runno between 21221 and 67976-1 and detectorid <= 2;

insert into runno_fileno_sitemask select distinct runno, fileno, sitemask from DqDetectorNew natural join DqDetectorNewVld where sitemask=1 and runno > 67976 and detectorid=2;

insert into runno_fileno_sitemask select distinct runno, fileno, sitemask from DqDetectorNew natural join DqDetectorNewVld where sitemask=2 and runno between 21221 and 26694-1 and detectorid=1;

insert into runno_fileno_sitemask select distinct runno, fileno, sitemask from DqDetectorNew natural join DqDetectorNewVld where sitemask=2 and runno > 26694 and detectorid <= 2;

insert into runno_fileno_sitemask select distinct runno, fileno, sitemask from DqDetectorNew natural join DqDetectorNewVld where sitemask=4 and runno between 21221 and 26694-1 and detectorid <= 3;

insert into runno_fileno_sitemask select distinct runno, fileno, sitemask from DqDetectorNew natural join DqDetectorNewVld where sitemask=4 and runno > 26694 and detectorid <= 4;

# create index idx_rev on runno_fileno_sitemask(sitemask, runno, fileno);

** MyISAM -> InnoDB
- https://support.severalnines.com/hc/en-us/articles/212426983-Migrate-MyISAM-tables-to-INNODB-using-mysqldump
- alter table DqDetectorNew engine=innodb;
** Replication junk
(OLD) mysql> show master status;
+------------------+-----------+--------------+------------------+
| File             | Position  | Binlog_Do_DB | Binlog_Ignore_DB |
+------------------+-----------+--------------+------------------+
| mysql-bin.000263 | 494427353 |              |                  |
+------------------+-----------+--------------+------------------+
1 row in set (0.00 sec)

+------------------+----------+--------------+------------------+
| File             | Position | Binlog_Do_DB | Binlog_Ignore_DB |
+------------------+----------+--------------+------------------+
| mysql-bin.000266 |      637 |              |                  |
+------------------+----------+--------------+------------------+
1 row in set (0.00 sec)


https://www.digitalocean.com/community/tutorials/how-to-set-up-master-slave-replication-in-mysql

** Old credentials from app.py
#+BEGIN_SRC python
# DB = MySQLdb.connect(host='aftershock.lbl.gov', port=6603,
#                      user='root', passwd='***REMOVED***', db='dq_db')
# DB = MySQLdb.connect(host='dybdq.ihep.ac.cn',
#                      user='dayabay', passwd='***REMOVED***', db='dq_db')
#+END_SRC
* Let's Encrypt
(google certbot wildcard)
https://blog.miguelgrinberg.com/post/running-your-flask-application-over-https
https://levelup.gitconnected.com/how-to-get-certbot-wildcard-certificates-3d25618a81e0
My steps:

git clone https://github.com/certbot/certbot
cd certbot
./certbot-auto --os-packages-only
./tools/venv.sh # only needed once; _creates_ venv
source venv/bin/activate
./certbot-auto -d dybdq.work -d *.dybdq.work --manual --preferred-challenges dns-01 --server https://acme-v02.api.letsencrypt.org/directory certonly

[[https://certbot.eff.org/docs/using.html#nginx][Renewal]] (every 90 days; due 2018/12/4): Either,
- Manually repeat the above
- Write a --manual-auth-hook to repeat the above
- Switch to the "standalone" certbot plugin (no more wildcard)
- Use the certbot-dns-digitalocean plugin

Certs/keys in /etc/letsencrypt

* Password auth
https://www.digitalocean.com/community/tutorials/how-to-set-up-password-authentication-with-nginx-on-ubuntu-14-04
* Nginx stuff
- https://stackoverflow.com/questions/46880853/deploy-create-react-app-on-nginx
* SQLAlchemy
** Executing on a specific bind:
- https://github.com/mitsuhiko/flask-sqlalchemy/issues/107
** Compiling an on_duplicate_key_update statement
stmt = mysql.insert(Tagging).values(update) \
            .on_duplicate_key_update(hall=Tagging.hall)
text = stmt.compile(mysql.dialect()).__str__()
db.get_engine(bind='app_db').execute(stmt or text)
** Query example
D = DqDetectorNew
D.query.with_entities(D.PLIKECOUNTS).filter(D.RUNNO == 54606 and D.DETECTORID == 1).all()

* References
- https://github.com/Microsoft/TypeScript-React-Starter
- https://github.com/sw-yx/react-typescript-cheatsheet
- https://levelup.gitconnected.com/ultimate-react-component-patterns-with-typescript-2-8-82990c516935

* Opening the project in VS Code
So far succeeded with opening dybvdq-front folder. Haven't tried opening the whole chooch.

* Updating type definitions
Just run ~typesync~

* Linting setup
** Before:
#+BEGIN_SRC json
"extends": ["tslint:recommended", "tslint-react", "tslint-config-prettier"],
#+END_SRC
** After:
#+BEGIN_SRC json
"extends": [],
"defaultSeverity": "warning",
#+END_SRC

        "after": ["y", "y", "P", "k", ">", ">", "C"]

* From RunAndFile.tsx (ViewProps)
#+BEGIN_SRC typescript-tsx
  // Event handlers must return any instead of void
  // https://github.com/piotrwitek/react-redux-typescript-guide#caveat-with-bindactioncreators
  // onChangeRunno: (e: React.ChangeEvent<HTMLInputElement>) => void;
  // onChangeFileno: (e: React.ChangeEvent<HTMLInputElement>) => any;
  // onClick: (e: React.MouseEvent<any>) => any;
  onChangeRunno: React.ChangeEventHandler<HTMLInputElement>;
  onChangeFileno: React.ChangeEventHandler<HTMLInputElement>;
  onClick: React.MouseEventHandler<any>;
#+END_SRC

* Contents of src/components/App.test.tsx
#+BEGIN_SRC typescript-tsx
import * as React from 'react';
import * as ReactDOM from 'react-dom';
import App from './App';

it('renders without crashing', () => {
  const div = document.createElement('div');
  ReactDOM.render(<App />, div);
  ReactDOM.unmountComponentAtNode(div);
});
#+END_SRC

* Contents of src/App.css
#+BEGIN_SRC css
.App {
  text-align: center;
}

.App-logo {
  animation: App-logo-spin infinite 20s linear;
  height: 80px;
}

.App-header {
  background-color: #222;
  height: 150px;
  padding: 20px;
  color: white;
}

.App-title {
  font-size: 1.5em;
}

.App-intro {
  font-size: large;
}

@keyframes App-logo-spin {
  from { transform: rotate(0deg); }
  to { transform: rotate(360deg); }
}
#+END_SRC

* Contents of src/index.css
#+BEGIN_SRC css
body {
  margin: 0;
  padding: 0;
  font-family: sans-serif;
}
#+END_SRC

* JS snippets
** toQuerystring
#+BEGIN_SRC js
export const toQuerystring = (obj: object) =>
  Object.entries(obj)
    .map(([k, v]) => `${k}=${encodeURIComponent(v)}`)
    .join('&');
#+END_SRC

* TypeScript References
** Variadic generics
https://github.com/Microsoft/TypeScript/issues/5453
** Removing 'undefined'
https://github.com/Microsoft/TypeScript/issues/24067
** Strict bind, call, apply
https://github.com/Microsoft/TypeScript/pull/27028
* Alternative backend frameworks
** Kotlin
- http4k
- vert.x
- ktor
- jooby
- javalin
